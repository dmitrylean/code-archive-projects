---
interface MenuItem {
  href: string;
  text: string;
  external?: boolean;
}

const rawMenu = (Astro.props as any).menu;
let menu: MenuItem[] = [];

if (Array.isArray(rawMenu)) {
  menu = rawMenu as MenuItem[];
} else if (rawMenu && typeof rawMenu === "object") {
  if ("href" in rawMenu && "text" in rawMenu) {
    menu = [rawMenu as MenuItem];
  } else {
    menu = Object.values(rawMenu)
      .filter(Boolean)
      .map((it: any) => {
        if (typeof it === "string") return { href: it, text: it };
        return {
          href: it?.href ?? "/",
          text: it?.text ?? String(it?.href ?? ""),
          external: !!it?.external,
        };
      }) as MenuItem[];
  }
} else {
  menu = [];
}

if (!Array.isArray(rawMenu)) {
  console.warn(
    "Header: received non-array menu (normalized). Raw value:",
    rawMenu
  );
}
---

<header class="header">
  <div class="container">
    <button class="burger" id="openMenu" aria-label="Открыть меню">
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="28"
        height="28"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
        stroke-linecap="round"
        stroke-linejoin="round"
      >
        <line x1="3" y1="6" x2="21" y2="6"></line>
        <line x1="3" y1="12" x2="21" y2="12"></line>
        <line x1="3" y1="18" x2="21" y2="18"></line>
      </svg>
    </button>

    <button class="close" id="closeMenu" aria-label="Закрыть меню">
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="28"
        height="28"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
        stroke-linecap="round"
        stroke-linejoin="round"
      >
        <line x1="18" y1="6" x2="6" y2="18"></line>
        <line x1="6" y1="6" x2="18" y2="18"></line>
      </svg>
    </button>

    <!-- <a href="/" class="logo">Dmitry Lean</a> -->

    <nav class="nav" id="menu">
      {
        menu.map((item) => (
          <a
            href={item.href}
            target={item.external ? "_blank" : undefined}
            rel={item.external ? "noopener noreferrer" : undefined}
          >
            {item.text}
          </a>
        ))
      }
    </nav>

    <div class="overlay" id="overlay"></div>
  </div>
</header>

<style>
  body {
    font-family: Arial, sans-serif;
    margin: 0;
    background: #fff;
    color: #1f1f1f;
  }

  /* ===== HEADER ===== */
  header {
    display: flex;
    justify-content: flex-end;
    align-items: center;
    padding: 20px 40px;
  }

  .nav {
    display: flex;
    justify-content: right;
    gap: 30px;
    z-index: 10;
  }

  .nav a {
    text-decoration: none;
    color: #111;
    font-weight: 500;
    transition: color 0.3s ease;
  }

  .nav a:hover {
    color: red;
  }

  /* ===== BURGER ===== */
  .burger {
    display: none;
    flex-direction: column;
    cursor: pointer;
    gap: 5px;
    margin-left: auto;
  }

  .close {
    display: none;
  }

  .burger span {
    width: 25px;
    height: 3px;
    background: white;
    border-radius: 2px;
  }

  /* Overlay */
  .overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0;
    visibility: hidden;
    transition: opacity 0.3s ease;
    z-index: 5;
  }

  .overlay.active {
    opacity: 1;
    visibility: visible;
  }

  /* ===== RESPONSIVE ===== */
  @media (max-width: 768px) {
    header {
      justify-content: center;
    }

    .burger {
      display: flex;
    }

    .close {
      display: none;
    }

    /* ==== NAV ==== */
    .nav {
      position: fixed;
      top: 0;
      right: -250px;
      height: 100%;
      width: 250px;
      background: rgb(243, 241, 241);
      flex-direction: column;
      padding: 60px 20px;
      transition: right 0.3s ease;
      gap: 5px;
    }

    .nav a {
      margin: 15px 0;
      font-size: 18px;
      color: black;
    }

    .nav a:hover {
      color: red;
    }

    .nav.active {
      right: 0;
    }

    .nav.active ~ .close {
      display: flex;
    }

    .nav.active ~ .burger {
      display: none;
    }
  }
</style>
